package com.epn3;

import java.util.Random;

import javax.swing.JOptionPane;

public class Vector {
private int [] vector;
public Vector ()
{int longitud=Integer.parseInt(JOptionPane.showInputDialog("Ingrese la longitud del Vector"));
vector =new int [longitud];
}
public int[] getVector() {
	return vector;
}
public void setVector() {
	Random npseudo=new Random();
	for (int i=0; i<this.vector.length;i++)
	{//vector[i]=Integer.parseInt(JOptionPane.showInputDialog("Vector["+i+"]="));	
		this.vector[i]=1+npseudo.nextInt(6);
	
	}}
public String toString ()
{String salida="";
for (int i=0; i<this.vector.length;i++)
salida+=vector[i]+" ";
return salida;
}
public long sumatorio()
{long sumatorio=0;
for (int i=0; i<this.vector.length;i++)
{sumatorio=sumatorio+vector[i];
}
return sumatorio;
}
public long sumapar()
{long sumapar=0;
for (int i=0; i<this.vector.length;i++)
{if (vector[i]%2==0)
	sumapar=sumapar+vector[i];}
return sumapar;
}

public int sumaprimo()
{ boolean bandera=true; int sumatoria=0;
for(int j=1;j<(this.vector.length);j++)	{
for(int i=2;i<(vector[i]);i++){
	if(vector[i]%i==0){
		bandera=false;
		break;
	}
if (bandera==false){
sumatoria=sumatoria+vector[i];
}}}

return sumatoria;}




public void sortBurbuja()  
{  int auxiliar;  
int [] ordenado=vector;
  for(int i = 0; i < ordenado.length-1; i++)  
  {for(int j =i+1;j < ordenado.length;j++)  
    {if(ordenado[i] > ordenado[j])  
      {auxiliar = ordenado[j];  
        ordenado[j] = ordenado[i];  
        ordenado[i] = auxiliar;;}}}}


public int busquedaSecuencial(int b)  
{int i;
int posicion=-1;
for( i= 0; i < vector.length; i++)  {
if(vector[i]==b)
{posicion=i;break;}}
return posicion;}

public int busquedaBinaria(int b)  
{int min=0,medio=0;
int max=vector.length-1;
	 while(min <= max)
     {   medio = (max + min) / 2;
          
           if (vector[medio] == b)
              return medio;
           else
              if (vector[medio] > b)
                    max = medio - 1;
              else
                    min = medio + 1;
     }return -1;}}




